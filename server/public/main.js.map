{"version":3,"sources":["./src/app/pages/poll-edit/poll-edit.component.ts","./src/app/pages/poll-edit/poll-edit.component.html","./src/app/services/util.service.ts","./src/app/services/resolvers/user.resolver.ts","./src/app/services/socket.service.ts","./src/app/cmps/poll-comments/poll-comments.component.ts","./src/app/cmps/poll-comments/poll-comments.component.html","./src/environments/environment.ts","./src/app/cmps/confirm-modal/confirm-modal.component.ts","./src/app/cmps/confirm-modal/confirm-modal.component.html","./src/app/pages/login/login.component.ts","./src/app/pages/login/login.component.html","./src/app/pages/user-profile/user-profile.component.ts","./src/app/pages/user-profile/user-profile.component.html","./src/app/pages/poll-details/poll-details.component.ts","./src/app/pages/poll-details/poll-details.component.html","./node_modules/moment/locale sync ^\\.\\/.*$","./src/app/services/poll.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/pages/poll-app/poll-app.component.ts","./src/app/pages/poll-app/poll-app.component.html","./src/app/cmps/share/share.component.ts","./src/app/cmps/share/share.component.html","./src/app/cmps/voted-modal/voted-modal.component.ts","./src/app/cmps/voted-modal/voted-modal.component.html","./src/app/services/resolvers/poll-resolver.service.ts","./src/app/app.module.ts","./src/app/cmps/popover/popover.component.ts","./src/app/cmps/popover/popover.component.html","./src/app/helpers/interceptors/add-header.interceptor.ts","./src/app/cmps/poll-list/poll-list.component.ts","./src/app/cmps/poll-list/poll-list.component.html","./src/app/pages/signup/signup.component.ts","./src/app/pages/signup/signup.component.html","./src/app/pages/homepage/homepage.component.ts","./src/app/pages/homepage/homepage.component.html","./src/app/services/user.service.ts","./src/app/cmps/poll-preview/poll-preview.component.ts","./src/app/cmps/poll-preview/poll-preview.component.html","./src/app/cmps/app-header/app-header.component.html","./src/app/cmps/app-header/app-header.component.ts","./src/app/app-routing.module.ts","./src/app/pages/poll-results/poll-results.component.ts","./src/app/pages/poll-results/poll-results.component.html","./src/app/pages/error/error.component.ts","./src/app/pages/error/error.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA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","file":"main.js","sourcesContent":["import {\r\n  AfterViewInit,\r\n  Component,\r\n  ElementRef,\r\n  OnInit,\r\n  ViewChild,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport {\r\n  trigger,\r\n  state,\r\n  style,\r\n  animate,\r\n  transition,\r\n  keyframes,\r\n} from '@angular/animations';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Poll } from 'src/app/models/poll';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { cloneDeep } from 'lodash';\r\nimport { PollService } from 'src/app/services/poll.service';\r\nimport { Option } from 'src/app/models/option';\r\nimport { LoggedUser } from 'src/app/models/logged-user';\r\nimport { Title } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'poll-edit',\r\n  templateUrl: './poll-edit.component.html',\r\n  styleUrls: ['./poll-edit.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: [\r\n    trigger('input', [\r\n      state('in', style({ opacity: 1 })),\r\n      transition(':enter', [\r\n        animate(\r\n          '.3s ease-in',\r\n          keyframes([\r\n            style({ opacity: 0 }),\r\n            style({ opacity: 0.5 }),\r\n            style({ opacity: 1 }),\r\n          ])\r\n        ),\r\n      ]),\r\n    ]),\r\n    trigger('disabled', [transition(':enter', [])]),\r\n  ],\r\n})\r\nexport class PollEditComponent implements OnInit, AfterViewInit {\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private userService: UserService,\r\n    private pollService: PollService,\r\n    private fb: FormBuilder,\r\n    private titleService: Title\r\n  ) {}\r\n  pollToEdit: Poll = null;\r\n  pollForm: FormGroup;\r\n  submitted: boolean = false;\r\n  loggedInUser: LoggedUser;\r\n  isAnimationDisabled: boolean = true;\r\n  @ViewChild('question') questionInput: ElementRef;\r\n\r\n  ngOnInit(): void {\r\n    this.route.data.subscribe((data) => {\r\n      this.pollToEdit = data.poll;\r\n    });\r\n    this.loggedInUser = this.userService.loggedUserValue;\r\n    if (!this.loggedInUser) {\r\n      this.userService.getGuestData();\r\n    }\r\n    this.fillForm();\r\n    const tabTitle = this.pollToEdit ? 'Edit Poll' : 'Create Poll';\r\n    this.titleService.setTitle(tabTitle);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.pollToEdit) return; // If editing, don't focus the input to avoid the input showing the end of the question in case the string is long.\r\n    this.questionInput.nativeElement.focus();\r\n  }\r\n\r\n  get options(): FormArray {\r\n    return this.pollForm.get('options') as FormArray;\r\n  }\r\n\r\n  onAddOption(): void {\r\n    this.isAnimationDisabled = false;\r\n    this.options.push(this.fb.control(''));\r\n  }\r\n\r\n  onOptionFocus(idx: number) {\r\n    if (idx + 1 === this.pollForm.controls.options.value.length) {\r\n      this.onAddOption();\r\n    }\r\n  }\r\n\r\n  onDateCheckbox(ev: HTMLInputElement): void {\r\n    // If user checked deadline, selected a date and then unchecked deadline, reset the dueDate property to ''.\r\n    if (!ev.checked) {\r\n      this.pollForm.controls.dueDate.setValue('');\r\n    }\r\n  }\r\n\r\n  onResetForm(): void {\r\n    this.pollForm.reset();\r\n    this.pollForm.controls.isComments.setValue(true);\r\n    this.submitted = false;\r\n  }\r\n\r\n  onSubmit(): void {\r\n    this.submitted = true;\r\n    if (!this.pollForm.valid) {\r\n      return;\r\n    }\r\n    const formValue = cloneDeep(this.pollForm.value);\r\n    const existingPoll = cloneDeep(this.pollToEdit);\r\n    const options = this.getFormOptions(formValue, existingPoll);\r\n    const pollToSubmit: Poll = {\r\n      _id: existingPoll?._id,\r\n      title: formValue.title,\r\n      description: formValue.description,\r\n      options,\r\n      isPrivate: formValue.isPrivate,\r\n      isComments: formValue.isComments,\r\n      dueDate: formValue.isDeadline ? formValue.dueDate : null,\r\n      allowMultiple: formValue.allowMultiple ?? false,\r\n      comments: existingPoll?.comments || [],\r\n      createdAt: existingPoll?.createdAt || Date.now(),\r\n      voters: existingPoll?.voters || {},\r\n      totalVotes: existingPoll?.totalVotes || 0,\r\n      owner: this.formOwner, // TODO: fill guest/user data as owner\r\n    };\r\n    this.pollService.submitPoll(pollToSubmit).subscribe((poll: Poll) => {\r\n      this.router.navigateByUrl(`poll/${poll._id}`);\r\n    });\r\n\r\n    this.submitted = false;\r\n  }\r\n\r\n  fillForm(): void {\r\n    const poll = this.pollToEdit;\r\n    const pollIsDeadline = poll?.dueDate ? true : false;\r\n    this.pollForm = this.fb.group({\r\n      title: [poll?.title || '', [Validators.required]],\r\n      description: [poll?.description || ''],\r\n      options: this.fb.array(\r\n        poll\r\n          ? poll.options.map((option, idx) => {\r\n              return this.fb.control(\r\n                option.txt,\r\n                idx <= 1 ? Validators.required : null\r\n              );\r\n            })\r\n          : [\r\n              this.fb.control('', [Validators.required]),\r\n              this.fb.control('', [Validators.required]),\r\n              this.fb.control(''),\r\n            ]\r\n      ),\r\n      isPrivate: [poll?.isPrivate || false],\r\n      isComments: [poll?.isComments || true],\r\n      isDeadline: [poll ? pollIsDeadline : false],\r\n      dueDate: [poll ? new Date(poll.dueDate) : ''],\r\n      allowMultiple: [poll?.allowMultiple ?? false],\r\n    });\r\n  }\r\n\r\n  getFormOptions(formValue: any, existingPoll: Poll): Option[] {\r\n    const options = [];\r\n    for (let i = 0; i < formValue.options.length; i++) {\r\n      if (!formValue.options[i]) continue;\r\n      const option = {\r\n        txt: formValue.options[i],\r\n        votes: existingPoll?.options[i]?.votes\r\n          ? existingPoll.options[i].votes\r\n          : 0,\r\n        _id: existingPoll?.options[i]?._id\r\n          ? existingPoll.options[i]._id\r\n          : `o${i}`,\r\n      };\r\n      options.push(option);\r\n    }\r\n    return options;\r\n  }\r\n\r\n  get formOwner() {\r\n    if (this.pollToEdit) {\r\n      return this.pollToEdit.owner;\r\n    } else if (this.loggedInUser) {\r\n      return this.loggedInUser;\r\n    } else {\r\n      const guestData = cloneDeep(this.userService.guestDataValue);\r\n      const owner = {\r\n        _id: 'guest',\r\n        name: 'Guest',\r\n        email: 'uvoteguest@gmail.com',\r\n        country: guestData.country,\r\n        flag: guestData.flag.svg,\r\n      };\r\n      return owner;\r\n    }\r\n  }\r\n}\r\n","<section class=\"poll-edit flex align-center\">\r\n  <div class=\"flying-rabbit\"></div>\r\n  <form\r\n    (ngSubmit)=\"onSubmit()\"\r\n    [formGroup]=\"pollForm\"\r\n    class=\"flex column align-center justify-center form-container\"\r\n  >\r\n    <div class=\"form-question\">\r\n      <label for=\"title\" class=\"question-label\">Question</label>\r\n      <input\r\n        #question\r\n        formControlName=\"title\"\r\n        id=\"title\"\r\n        type=\"text\"\r\n        placeholder=\"Enter your question here\"\r\n        class=\"question\"\r\n        autocomplete=\"off\"\r\n      />\r\n      <p\r\n        class=\"error-p\"\r\n        [ngClass]=\"{\r\n          'has-error': submitted && pollForm.get('title').hasError('required')\r\n        }\"\r\n      >\r\n        <span *ngIf=\"submitted && pollForm.get('title').hasError('required')\"\r\n          >Question is required.</span\r\n        >\r\n      </p>\r\n    </div>\r\n    <textarea\r\n      formControlName=\"description\"\r\n      cols=\"30\"\r\n      rows=\"3\"\r\n      autocomplete=\"false\"\r\n      spellcheck=\"false\"\r\n      placeholder=\"Optional description\"\r\n    ></textarea>\r\n    <div class=\"options\" formArrayName=\"options\">\r\n      <h3>Options:</h3>\r\n      <p\r\n        class=\"error-p\"\r\n        [ngClass]=\"{\r\n          'has-error':\r\n            (submitted && options.controls[0].hasError('required')) ||\r\n            (submitted && options.controls[1].hasError('required'))\r\n        }\"\r\n      >\r\n        <span\r\n          *ngIf=\"\r\n            (submitted && options.controls[0].hasError('required')) ||\r\n            (submitted && options.controls[1].hasError('required'))\r\n          \"\r\n          >Please fill at least 2 options.</span\r\n        >\r\n      </p>\r\n      <div\r\n        *ngFor=\"let option of options.controls; let i = index\"\r\n        class=\"form-options\"\r\n        [@.disabled]=\"isAnimationDisabled\"\r\n      >\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Add option {{ i + 1 }}\"\r\n          [formControlName]=\"i\"\r\n          (focus)=\"onOptionFocus(i)\"\r\n          [@input]=\"'in'\"\r\n        />\r\n      </div>\r\n      <button type=\"button\" (click)=\"onAddOption()\">Add Option</button>\r\n    </div>\r\n    <div\r\n      class=\"checkboxes\"\r\n      [ngClass]=\"{ 'mb-checkbox': !pollForm.get('isDeadline').value }\"\r\n    >\r\n      <p-checkbox\r\n        [formControl]=\"pollForm.controls['isComments']\"\r\n        label=\"Comments\"\r\n        [binary]=\"true\"\r\n      ></p-checkbox>\r\n\r\n      <p-checkbox\r\n        [formControl]=\"pollForm.controls['isPrivate']\"\r\n        label=\"Private Poll\"\r\n        [binary]=\"true\"\r\n      ></p-checkbox>\r\n\r\n      <p-checkbox\r\n        [formControl]=\"pollForm.controls['isDeadline']\"\r\n        label=\"Deadline\"\r\n        [binary]=\"true\"\r\n        (onChange)=\"onDateCheckbox($event)\"\r\n      ></p-checkbox>\r\n\r\n      <p-checkbox\r\n        [formControl]=\"pollForm.controls['allowMultiple']\"\r\n        label=\"Allow Multiple Votes\"\r\n        [binary]=\"true\"\r\n      ></p-checkbox>\r\n    </div>\r\n    <div *ngIf=\"pollForm.get('isDeadline').value\" class=\"calendar\">\r\n      <p-calendar\r\n        class=\"p-datepicker-monthpicker\"\r\n        formControlName=\"dueDate\"\r\n        [showTime]=\"true\"\r\n        showIcon=\"true\"\r\n        dateFormat=\"dd/mm/yy\"\r\n        [monthNavigator]=\"true\"\r\n        showButtonBar=\"true\"\r\n      ></p-calendar>\r\n    </div>\r\n    <div class=\"buttons flex space-between\">\r\n      <button (click)=\"onResetForm()\" type=\"button\" class=\"reset-btn\">\r\n        Reset Form\r\n      </button>\r\n      <span class=\"underline\"></span>\r\n      <button type=\"submit\" class=\"submit-btn\">\r\n        {{ pollToEdit ? \"Save\" : \"Create\" }}\r\n      </button>\r\n    </div>\r\n    <div *ngIf=\"!loggedInUser\" class=\"info\">\r\n      <p>* As a guest you won't be able to edit/delete your poll</p>\r\n    </div>\r\n  </form>\r\n</section>\r\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UtilService {\n  constructor() {}\n\n  public makeid = (length: number): string => {\n    let text = '';\n    const possible =\n      'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n    for (let i = 0; i < length; i++) {\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n\n    return text;\n  };\n\n  public getRandomLightColor = (): string => {\n    let color = 'hsl(' + Math.random() * 360 + ', 100%, 40%)';\n    return color;\n  };\n\n  public saveToStorage(key: string, val: any) {\n    const str = JSON.stringify(val);\n    localStorage.setItem(key, str);\n  }\n\n  public loadFromStorage(key: string) {\n    const str = localStorage.getItem(key);\n    return JSON.parse(str);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router, ActivatedRouteSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { User } from 'src/app/models/user';\nimport { UserService } from '../user.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserResolver {\n  constructor(private userService: UserService, private router: Router) {}\n  resolve(route: ActivatedRouteSnapshot): Observable<User> {\n    const { id } = route.params;\n    const page = route.queryParams.page || 1\n    if (!id) {\n      this.router.navigateByUrl('/404');\n      return null;\n    }\n    return this.userService.getById(id, page);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n// @ts-ignore\nimport * as io from 'socket.io-client/dist/socket.io';\nimport { environment } from 'src/environments/environment';\nimport { Poll } from '../models/poll';\n@Injectable({\n  providedIn: 'root',\n})\nexport class SocketService {\n  socket: any;\n  readonly BASE_URL: string = environment.socketURL;\n\n  constructor() {\n    this.socket = io(this.BASE_URL);\n  }\n\n  on(eventName: string):Observable<Poll> {\n    return new Observable((subscriber) => {\n      this.socket.on(eventName, (data: any) => {\n        subscriber.next(data);\n      });\n    });\n  }\n\n  emit(eventName: string, data: any) {\n    this.socket.emit(eventName, data);\n  }\n}\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { Poll } from 'src/app/models/poll';\nimport { PollService } from 'src/app/services/poll.service';\nimport * as moment from 'moment';\nimport { cloneDeep } from 'lodash';\nimport { Comment } from 'src/app/models/comment';\n\n@Component({\n  selector: 'poll-comments',\n  templateUrl: './poll-comments.component.html',\n  styleUrls: ['./poll-comments.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class PollCommentsComponent implements OnInit {\n  constructor(private pollService: PollService) {}\n  commentValue: string;\n  error: boolean = false;\n  page: number = 1;\n  @Input() poll: Poll;\n  @Output() updatePoll = new EventEmitter(true);\n\n  ngOnInit(): void {}\n\n  onCommentPost() {\n    if (!this.commentValue) this.error = true;\n    const pollCopy = cloneDeep(this.poll);\n    this.pollService\n      .addComment(this.commentValue, pollCopy)\n      .subscribe((updatedPoll) => this.updatePoll.emit(updatedPoll));\n    this.error = false;\n    this.commentValue = '';\n  }\n\n  getCommentDate(comment: Comment) {\n    const created = moment(comment.createdAt);\n    return created.from(Date.now());\n  }\n\n  handlePageChange(ev: any) {\n    this.page = ev;\n  }\n}\n","<section class=\"comments-section\">\n  <p class=\"error\" *ngIf=\"error\">Can't post an empty comment</p>\n  <div class=\"container flex column\">\n    <div class=\"add-comment flex column\">\n      <h4 class=\"comments-heading\">Add a comment</h4>\n      <textarea\n        [(ngModel)]=\"commentValue\"\n        name=\"comments\"\n        id=\"comments\"\n        placeholder=\"Share your thoughts\"\n      ></textarea>\n      <button (click)=\"onCommentPost()\">Post comment</button>\n    </div>\n    <div *ngIf=\"poll.comments.length > 3\" class=\"pagination\">\n      <pagination-controls\n        previousLabel=\"Previous\"\n        nextLabel=\"Next\"\n        responsive=\"true\"\n        (pageChange)=\"handlePageChange($event)\"\n      >\n      </pagination-controls>\n    </div>\n    <div *ngIf=\"poll.comments.length\" class=\"comment-list\">\n      <div\n        *ngFor=\"\n          let comment of poll.comments\n            | paginate\n              : {\n                  itemsPerPage: 3,\n                  currentPage: page\n                }\n        \"\n        class=\"comment-preview\"\n      >\n        <div class=\"comment-heading\">\n          <h5>{{ comment.author.name }}</h5>\n          <span> - {{ getCommentDate(comment) }}</span>\n        </div>\n        <p class=\"comment-txt\">{{ comment.txt }}</p>\n        <div\n          [style.background-color]=\"comment.author.logoColor\"\n          class=\"author-logo flex justify-center align-center\"\n        >\n          <span>{{ comment.author.name.charAt(0) }}</span>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  pollURL: 'http://localhost:3030/api/poll',\r\n  authURL: 'http://localhost:3030/api/auth',\r\n  userURL: 'http://localhost:3030/api/user',\r\n  socketURL: 'http://localhost:3030',\r\n  apiKey: 'a73f9c3ddf2a4da6ba8f13d7a88898f4',\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { ConfirmationService } from 'primeng/api';\n\n@Component({\n  selector: 'confirm-modal',\n  templateUrl: './confirm-modal.component.html',\n  styleUrls: ['./confirm-modal.component.scss'],\n  providers: [ConfirmationService],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ConfirmModalComponent implements OnInit {\n  constructor(private confirmationService: ConfirmationService) {}\n  ngOnInit(): void {\n    this.onConfirm()\n  }\n\n  @Output() userSelection = new EventEmitter<boolean>()\n\n  onConfirm() {\n    this.confirmationService.confirm({\n      message: 'Are you sure that you want to delete this poll?',\n      accept: () => {\n        this.userSelection.emit(true)\n      },\n      reject: () => {\n        this.userSelection.emit(false)\n      }\n    });\n  }\n}\n","<p-confirmDialog\n  header=\"Confirmation\"\n  icon=\"pi pi-exclamation-triangle\"\n  [style]=\"{width: '50vw'}\"\n  dismissableMask=\"true\"\n></p-confirmDialog>\n","import { ChangeDetectionStrategy, Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport {\n  SocialAuthService,\n  GoogleLoginProvider,\n  SocialUser,\n} from 'angularx-social-login';\nimport { Subscription } from 'rxjs';\nimport { UserService } from 'src/app/services/user.service';\n@Component({\n  selector: 'login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n  loginForm: FormGroup;\n  socialUser: SocialUser;\n  showPassword: boolean = false;\n  submitted: boolean = false;\n  error = '';\n  loginSub: Subscription;\n  constructor(\n    private userService: UserService,\n    private fb: FormBuilder,\n    private socialAuthService: SocialAuthService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required],\n    });\n\n    this.socialAuthService.authState.subscribe((googleUser) => {\n\n      const userToSignIn = {\n        email: googleUser.email,\n        password: googleUser.idToken,\n      };\n      this.onLogin(userToSignIn);\n    });\n  }\n\n  onLogin(socialUser = null) {\n    this.submitted = true;\n    if (!socialUser && !this.loginForm.valid) return;\n    this.loginSub = this.userService\n      .login(socialUser || this.loginForm.value)\n      .subscribe(\n        (loggedUser) => {\n          this.userService.updateLoggedUser(loggedUser);\n          this.router.navigateByUrl('poll');\n        },\n        (err) => {\n          if (err.status === 401) {\n            this.error = 'Invalid email/password';\n          } else {\n            this.error = 'An error occurred. Please try again.';\n          }\n          return;\n        }\n      );\n\n    this.submitted = false;\n  }\n\n  onTogglePassword() {\n    this.showPassword = !this.showPassword;\n  }\n\n  onGoogleSignin() {\n    this.socialAuthService.signIn(GoogleLoginProvider.PROVIDER_ID);\n  }\n\n  ngOnDestroy() {\n    this.loginSub?.unsubscribe();\n  }\n}\n","<section class=\"login-container flex justify-center align-center\">\n  <form\n    [formGroup]=\"loginForm\"\n    (ngSubmit)=\"onLogin()\"\n    class=\"flex column justify-center\"\n  >\n    <div class=\"login-rabbit\"></div>\n    <h3>Log in to your account</h3>\n    <label for=\"email\">Email</label>\n    <span\n      class=\"has-error\"\n      *ngIf=\"\n        (submitted && loginForm.get('email').hasError('required')) ||\n        (submitted && loginForm.get('email').invalid)\n      \"\n      >Valid email is required</span\n    >\n    <span class=\"p-input-icon-left\">\n      <i class=\"pi pi-envelope email-icon\"></i>\n      <input\n        id=\"email\"\n        type=\"email\"\n        pInputText\n        placeholder=\"example@uvote.com\"\n        autocomplete=\"off\"\n        formControlName=\"email\"\n      />\n    </span>\n    <label for=\"password\">Password</label>\n    <span\n      class=\"has-error\"\n      *ngIf=\"submitted && loginForm.get('password').hasError('required')\"\n      >Password is required</span\n    >\n    <div class=\"password-container\">\n      <span class=\"p-input-icon-left\">\n        <i class=\"pi pi-lock password-icon\"></i>\n        <input\n          [type]=\"showPassword ? 'text' : 'password'\"\n          pInputText\n          placeholder=\"●●●●●\"\n          autocomplete=\"off\"\n          formControlName=\"password\"\n        />\n      </span>\n      <span (click)=\"onTogglePassword()\" class=\"toggle-password\">\n        <i\n          [title]=\"showPassword ? 'Hide Password' : 'Show Password'\"\n          [ngClass]=\"showPassword ? 'pi pi-eye-slash' : 'pi pi-eye'\"\n        ></i>\n      </span>\n    </div>\n    <h2 *ngIf=\"error\">{{ error }}</h2>\n    <button class=\"submit-btn\" type=\"submit\">Log in</button>\n    <button (click)=\"onGoogleSignin()\" class=\"google-btn\" type=\"button\">\n      Sign in with Google\n    </button>\n    <p class=\"login-p\">\n      Don't have an account? <a routerLink=\"/signup\">Sign up</a>\n    </p>\n  </form>\n</section>\n","import { Component, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { User } from 'src/app/models/user';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'user-profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: ['./user-profile.component.scss'],\n})\nexport class UserProfileComponent implements OnInit {\n  constructor(\n    private router: ActivatedRoute,\n    private titleService: Title,\n    private userService: UserService\n  ) {}\n\n  user: User;\n  totalPolls: number;\n  pageNumber: number = 1;\n  destroy$: Subject<boolean> = new Subject<boolean>();\n  ngOnInit(): void {\n    this.router.queryParams\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((params) => {\n        this.pageNumber = +params.page || 1;\n      });\n    this.getUser();\n    this.titleService.setTitle(`${this.user.name} | Uvote`);\n  }\n\n  getUser() {\n    this.router.data.pipe(takeUntil(this.destroy$)).subscribe((data) => {\n      this.user = data.user.user;\n      this.totalPolls = data.user.total;\n    });\n  }\n\n  handlePageChange({ ev, sortBy }) {\n    this.pageNumber = ev;\n    this.userService\n      .getById(this.user._id, this.pageNumber, sortBy)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((res: any) => {\n        this.user = res.user;\n        this.totalPolls = res.total;\n      });\n  }\n\n  get listTitle() {\n    return `Public polls made by ${this.user.name}`;\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.unsubscribe();\n  }\n}\n","<section class=\"user-profile\">\n  <div class=\"container flex column align-center justify-center\">\n    <div class=\"heading flex align-center\">\n      <div [style.background-color]=\"user.logoColor\" class=\"logo\">\n        <span>{{ user.name.charAt(0) }}</span>\n      </div>\n      <div class=\"info-container flex\">\n        <span class=\"username flex column\"\n          >{{ user.name }}\n          <div class=\"country flex\">\n            <img\n              *ngIf=\"user.flag\"\n              class=\"user-country\"\n              [src]=\"user.flag\"\n              [alt]=\"user.country\"\n              [title]=\"user.country\"\n            />\n            <img\n              *ngIf=\"!user.flag\"\n              src=\"../../../assets/imgs/question-mark.svg\"\n              title=\"Unknown Country\"\n            />\n          </div>\n        </span>\n        <div class=\"count-container\">\n          <div class=\"polls-count flex column justify-center\">\n            <h3>{{ totalPolls || 0 }}</h3>\n            <p>Polls created</p>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"user-polls\">\n      <poll-list\n        *ngIf=\"user.polls.length\"\n        (onPageChange)=\"handlePageChange($event)\"\n        [polls]=\"user.polls\"\n        [listTitle]=\"listTitle\"\n        [totalItems]=\"totalPolls\"\n        [currPage]=\"pageNumber\"\n        paginatorSize=\"5\"\n      ></poll-list>\n      <p class=\"default-msg\" *ngIf=\"!user.polls.length\">\n        {{ user.name }} didn't create any public polls yet\n      </p>\n    </div>\n  </div>\n</section>\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Poll } from 'src/app/models/poll';\r\nimport { PollService } from 'src/app/services/poll.service';\r\nimport * as moment from 'moment';\r\nimport { Subscription } from 'rxjs';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { User } from 'src/app/models/user';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { SocketService } from 'src/app/services/socket.service';\r\n\r\n@Component({\r\n  selector: 'poll-details',\r\n  templateUrl: './poll-details.component.html',\r\n  styleUrls: ['./poll-details.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class PollDetailsComponent implements OnInit, OnDestroy {\r\n  constructor(\r\n    private pollService: PollService,\r\n    private userService: UserService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private titleService: Title,\r\n    private socketService: SocketService\r\n  ) {}\r\n  poll: Poll;\r\n  selectedOptions: string[] = [];\r\n  isPopoverOpen: boolean = false;\r\n  isConfirmModalOpen: boolean = false;\r\n  isVoteModalOpen: boolean = false;\r\n  isDue: boolean = false;\r\n  savedPollSub: Subscription;\r\n  loggedUser: Partial<User>;\r\n  error: string;\r\n  pollSubmitted: boolean = false;\r\n  actionsTexts = ['Edit Poll', 'Delete Poll'];\r\n  actionsIcons = ['pi pi-pencil', 'pi pi-trash'];\r\n\r\n  ngOnInit(): void {\r\n    this.route.data.subscribe((data) => {\r\n      // Get current poll data from poll resolver\r\n      if (!data.poll) this.router.navigateByUrl('/404');\r\n      this.poll = data.poll;\r\n      this.titleService.setTitle(`${data.poll.title} | Uvote`);\r\n      this.socketService.on('connection')\r\n      this.socketService.emit('join poll', data.poll._id)\r\n    });\r\n    this.userService.getGuestData();\r\n    this.loggedUser = this.userService.loggedUserValue;\r\n    this.dueDateString; // invoked here to avoid erratic UI behavior after CD runs (NG0100)\r\n  }\r\n\r\n\r\n  toggleChecked(optionId: string) {\r\n    const optionIdx = this.selectedOptions.indexOf(optionId);\r\n    if (optionIdx === -1) {\r\n      return false;\r\n    } else return true;\r\n  }\r\n\r\n  getCreatedTime(): string {\r\n    return moment(this.poll.createdAt).fromNow();\r\n  }\r\n\r\n  getOptionPrecent(optionVotes: number) {\r\n    const precent = (optionVotes / this.poll.totalVotes) * 100;\r\n    if (!precent) return 0;\r\n    return parseFloat('' + precent).toFixed(2);\r\n  }\r\n\r\n  onSelectOption(optionId: string) {\r\n    const optionIdx = this.selectedOptions.indexOf(optionId);\r\n    if(this.poll.allowMultiple) {\r\n      if (optionIdx === -1) {\r\n        this.selectedOptions.push(optionId);\r\n      } else {\r\n        this.selectedOptions.splice(optionIdx, 1);\r\n      }\r\n    } else {\r\n      this.selectedOptions = [optionId]\r\n    }\r\n  }\r\n\r\n  onSubmitVote() {\r\n    this.pollSubmitted = true\r\n    this.error = ''\r\n    if(!this.selectedOptions.length) {\r\n      this.error = 'Please select at least one option'\r\n      return\r\n    }\r\n    this.savedPollSub = this.pollService\r\n      .addVote(this.poll, [...this.selectedOptions])\r\n      .subscribe(\r\n        (res) => {\r\n          this.isVoteModalOpen = true;\r\n        },\r\n        (err) => {\r\n          this.error = 'You have already voted on this poll.';\r\n        }\r\n      );\r\n      this.pollSubmitted = false\r\n  }\r\n\r\n  onSettingsClick(ev: HTMLFormElement) {\r\n    ev.stopPropagation();\r\n    this.isPopoverOpen = !this.isPopoverOpen;\r\n  }\r\n\r\n  onActionClick(actionType: string) {\r\n    if (actionType === 'Edit Poll') {\r\n      this.router.navigate(['edit'], { relativeTo: this.route });\r\n    } else if (actionType === 'Delete Poll') {\r\n      this.isConfirmModalOpen = true;\r\n    } else {\r\n      // Do Something...\r\n    }\r\n  }\r\n\r\n  onPollDelete(ev: any) {\r\n    if (ev) {\r\n      this.pollService.remove(this.poll._id).subscribe(() => {\r\n        this.router.navigateByUrl('/poll');\r\n      });\r\n    }\r\n    this.isConfirmModalOpen = false;\r\n  }\r\n\r\n  updatePoll(updatedPoll: Poll) {\r\n    this.poll = updatedPoll;\r\n  }\r\n\r\n  closePopover() {\r\n    if (this.isPopoverOpen) this.isPopoverOpen = false;\r\n    if (this.isVoteModalOpen) this.isVoteModalOpen = false;\r\n  }\r\n\r\n  getOptionName(idx: number) {\r\n    if (this.poll.allowMultiple) {\r\n      return `option${idx}`;\r\n    } else {\r\n      return 'option';\r\n    }\r\n  }\r\n\r\n  get resultsLink() {\r\n    return `/poll/${this.poll._id}/results`;\r\n  }\r\n\r\n  get userProfileLink() {\r\n    if (this.poll.owner._id === 'guest') {\r\n      return '';\r\n    } else {\r\n      return `/#/u/${this.poll.owner._id}`;\r\n    }\r\n  }\r\n\r\n  get pollUserHtmlString() {\r\n    if (this.poll.owner._id === 'guest') {\r\n      return `by a guest · <span>${this.getCreatedTime()}</span>`;\r\n    } else {\r\n      return `by <a routerLink=\"${this.userProfileLink}\" href=\"${\r\n        this.userProfileLink\r\n      }\">${this.poll.owner.name}</a> · <span>${this.getCreatedTime()}</span>`;\r\n    }\r\n  }\r\n\r\n  get dueDateString() {\r\n    if (this.poll.dueDate) {\r\n      const dueDate = new Date(this.poll.dueDate);\r\n      const now = new Date(Date.now());\r\n      const formattedDueDate = moment(this.poll.dueDate).fromNow();\r\n      if (dueDate > now) {\r\n        return `Voting ends ${formattedDueDate}.`;\r\n      } else {\r\n        this.isDue = true;\r\n        return `Voting ended ${formattedDueDate}.`;\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.savedPollSub) this.savedPollSub.unsubscribe();\r\n  }\r\n}\r\n","<div (click)=\"closePopover()\" class=\"poll-details flex column\">\r\n  <div class=\"flying-rabbit\"></div>\r\n  <div class=\"poll-container\">\r\n    <voted-modal\r\n      [poll]=\"poll\"\r\n      (onModalClose)=\"isVoteModalOpen = $event\"\r\n      [isVoteModalOpen]=\"isVoteModalOpen\"\r\n    ></voted-modal>\r\n    <div class=\"main-poll-info flex column align-center\">\r\n      <div class=\"poll-title flex column justify-center align-center\">\r\n        <h2>{{ poll.title }}</h2>\r\n\r\n        <div\r\n          *ngIf=\"loggedUser?._id === poll.owner._id\"\r\n          (click)=\"onSettingsClick($event)\"\r\n          class=\"poll-settings flex justify-center align-center\"\r\n        >\r\n          <i class=\"pi pi-ellipsis-h\">\r\n            <div\r\n              (click)=\"$event.stopPropagation()\"\r\n              *ngIf=\"isPopoverOpen\"\r\n              class=\"popover-content flex justify-center align-center\"\r\n            >\r\n              <popover\r\n                [actionsTexts]=\"actionsTexts\"\r\n                [actionsIcons]=\"actionsIcons\"\r\n                (actionType)=\"onActionClick($event)\"\r\n              ></popover>\r\n            </div>\r\n          </i>\r\n        </div>\r\n        <p class=\"by-user\" [innerHTML]=\"pollUserHtmlString\"></p>\r\n      </div>\r\n      <p *ngIf=\"poll.description\" class=\"poll-description\">\r\n        {{ poll.description }}\r\n      </p>\r\n      <span class=\"votes-count\"\r\n        >{{ poll.totalVotes ? poll.totalVotes : 0 }} votes</span\r\n      >\r\n      <form #pollForm=\"ngForm\" (ngSubmit)=\"onSubmitVote()\" class=\"poll-options\">\r\n        <div\r\n          *ngFor=\"let option of poll.options; let i = index\"\r\n          class=\"burmanRadio flex align-center\"\r\n        >\r\n          <input\r\n            type=\"radio\"\r\n            class=\"burmanRadio input\"\r\n            [id]=\"option._id\"\r\n            [name]=\"getOptionName(i)\"\r\n            (click)=\"onSelectOption(option._id)\"\r\n            [value]=\"option._id\"\r\n            [checked]=\"toggleChecked(option._id)\"\r\n            #option\r\n          />\r\n          <label [for]=\"option._id\">\r\n            <div class=\"flex\">\r\n              <span class=\"option-txt\">{{ option.txt }}</span>\r\n            </div>\r\n          </label>\r\n        </div>\r\n        <div *ngIf=\"poll.dueDate\" class=\"deadline-txt flex align-center\">\r\n          <i class=\"pi pi-clock\"></i>\r\n          <p [innerHTML]=\"dueDateString\"></p>\r\n        </div>\r\n        <div class=\"error\">\r\n          <h4 *ngIf=\"error\">{{ error }}</h4>\r\n        </div>\r\n\r\n        <div class=\"actions flex align-center\">\r\n          <div class=\"toggle flex align-center\">\r\n            <a [routerLink]=\"resultsLink\">Results</a>\r\n          </div>\r\n          <button class=\"submit-btn vote-btn\" type=\"submit\" [disabled]=\"isDue\">\r\n            Vote\r\n          </button>\r\n        </div>\r\n        <confirm-modal\r\n          *ngIf=\"isConfirmModalOpen\"\r\n          (userSelection)=\"onPollDelete($event)\"\r\n        ></confirm-modal>\r\n      </form>\r\n    </div>\r\n    <section class=\"info\">\r\n      <share></share>\r\n      <poll-comments\r\n        *ngIf=\"poll.isComments\"\r\n        [poll]=\"poll\"\r\n        (updatePoll)=\"updatePoll($event)\"\r\n      ></poll-comments>\r\n    </section>\r\n  </div>\r\n</div>\r\n","var map = {\n\t\"./af\": \"K/tc\",\n\t\"./af.js\": \"K/tc\",\n\t\"./ar\": \"jnO4\",\n\t\"./ar-dz\": \"o1bE\",\n\t\"./ar-dz.js\": \"o1bE\",\n\t\"./ar-kw\": \"Qj4J\",\n\t\"./ar-kw.js\": \"Qj4J\",\n\t\"./ar-ly\": \"HP3h\",\n\t\"./ar-ly.js\": \"HP3h\",\n\t\"./ar-ma\": \"CoRJ\",\n\t\"./ar-ma.js\": \"CoRJ\",\n\t\"./ar-sa\": \"gjCT\",\n\t\"./ar-sa.js\": \"gjCT\",\n\t\"./ar-tn\": \"bYM6\",\n\t\"./ar-tn.js\": \"bYM6\",\n\t\"./ar.js\": \"jnO4\",\n\t\"./az\": \"SFxW\",\n\t\"./az.js\": \"SFxW\",\n\t\"./be\": \"H8ED\",\n\t\"./be.js\": \"H8ED\",\n\t\"./bg\": \"hKrs\",\n\t\"./bg.js\": \"hKrs\",\n\t\"./bm\": \"p/rL\",\n\t\"./bm.js\": \"p/rL\",\n\t\"./bn\": \"kEOa\",\n\t\"./bn-bd\": \"loYQ\",\n\t\"./bn-bd.js\": \"loYQ\",\n\t\"./bn.js\": \"kEOa\",\n\t\"./bo\": \"0mo+\",\n\t\"./bo.js\": \"0mo+\",\n\t\"./br\": \"aIdf\",\n\t\"./br.js\": \"aIdf\",\n\t\"./bs\": \"JVSJ\",\n\t\"./bs.js\": \"JVSJ\",\n\t\"./ca\": \"1xZ4\",\n\t\"./ca.js\": \"1xZ4\",\n\t\"./cs\": \"PA2r\",\n\t\"./cs.js\": \"PA2r\",\n\t\"./cv\": \"A+xa\",\n\t\"./cv.js\": \"A+xa\",\n\t\"./cy\": \"l5ep\",\n\t\"./cy.js\": \"l5ep\",\n\t\"./da\": \"DxQv\",\n\t\"./da.js\": \"DxQv\",\n\t\"./de\": \"tGlX\",\n\t\"./de-at\": \"s+uk\",\n\t\"./de-at.js\": \"s+uk\",\n\t\"./de-ch\": \"u3GI\",\n\t\"./de-ch.js\": \"u3GI\",\n\t\"./de.js\": \"tGlX\",\n\t\"./dv\": \"WYrj\",\n\t\"./dv.js\": \"WYrj\",\n\t\"./el\": \"jUeY\",\n\t\"./el.js\": \"jUeY\",\n\t\"./en-au\": \"Dmvi\",\n\t\"./en-au.js\": \"Dmvi\",\n\t\"./en-ca\": \"OIYi\",\n\t\"./en-ca.js\": \"OIYi\",\n\t\"./en-gb\": \"Oaa7\",\n\t\"./en-gb.js\": \"Oaa7\",\n\t\"./en-ie\": \"4dOw\",\n\t\"./en-ie.js\": \"4dOw\",\n\t\"./en-il\": \"czMo\",\n\t\"./en-il.js\": \"czMo\",\n\t\"./en-in\": \"7C5Q\",\n\t\"./en-in.js\": \"7C5Q\",\n\t\"./en-nz\": \"b1Dy\",\n\t\"./en-nz.js\": \"b1Dy\",\n\t\"./en-sg\": \"t+mt\",\n\t\"./en-sg.js\": \"t+mt\",\n\t\"./eo\": \"Zduo\",\n\t\"./eo.js\": \"Zduo\",\n\t\"./es\": \"iYuL\",\n\t\"./es-do\": \"CjzT\",\n\t\"./es-do.js\": \"CjzT\",\n\t\"./es-mx\": \"tbfe\",\n\t\"./es-mx.js\": \"tbfe\",\n\t\"./es-us\": \"Vclq\",\n\t\"./es-us.js\": \"Vclq\",\n\t\"./es.js\": \"iYuL\",\n\t\"./et\": \"7BjC\",\n\t\"./et.js\": \"7BjC\",\n\t\"./eu\": \"D/JM\",\n\t\"./eu.js\": \"D/JM\",\n\t\"./fa\": \"jfSC\",\n\t\"./fa.js\": \"jfSC\",\n\t\"./fi\": \"gekB\",\n\t\"./fi.js\": \"gekB\",\n\t\"./fil\": \"1ppg\",\n\t\"./fil.js\": \"1ppg\",\n\t\"./fo\": \"ByF4\",\n\t\"./fo.js\": \"ByF4\",\n\t\"./fr\": \"nyYc\",\n\t\"./fr-ca\": \"2fjn\",\n\t\"./fr-ca.js\": \"2fjn\",\n\t\"./fr-ch\": \"Dkky\",\n\t\"./fr-ch.js\": \"Dkky\",\n\t\"./fr.js\": \"nyYc\",\n\t\"./fy\": \"cRix\",\n\t\"./fy.js\": \"cRix\",\n\t\"./ga\": \"USCx\",\n\t\"./ga.js\": \"USCx\",\n\t\"./gd\": \"9rRi\",\n\t\"./gd.js\": \"9rRi\",\n\t\"./gl\": \"iEDd\",\n\t\"./gl.js\": \"iEDd\",\n\t\"./gom-deva\": \"qvJo\",\n\t\"./gom-deva.js\": \"qvJo\",\n\t\"./gom-latn\": \"DKr+\",\n\t\"./gom-latn.js\": \"DKr+\",\n\t\"./gu\": \"4MV3\",\n\t\"./gu.js\": \"4MV3\",\n\t\"./he\": \"x6pH\",\n\t\"./he.js\": \"x6pH\",\n\t\"./hi\": \"3E1r\",\n\t\"./hi.js\": \"3E1r\",\n\t\"./hr\": \"S6ln\",\n\t\"./hr.js\": \"S6ln\",\n\t\"./hu\": \"WxRl\",\n\t\"./hu.js\": \"WxRl\",\n\t\"./hy-am\": \"1rYy\",\n\t\"./hy-am.js\": \"1rYy\",\n\t\"./id\": \"UDhR\",\n\t\"./id.js\": \"UDhR\",\n\t\"./is\": \"BVg3\",\n\t\"./is.js\": \"BVg3\",\n\t\"./it\": \"bpih\",\n\t\"./it-ch\": \"bxKX\",\n\t\"./it-ch.js\": \"bxKX\",\n\t\"./it.js\": \"bpih\",\n\t\"./ja\": \"B55N\",\n\t\"./ja.js\": \"B55N\",\n\t\"./jv\": \"tUCv\",\n\t\"./jv.js\": \"tUCv\",\n\t\"./ka\": \"IBtZ\",\n\t\"./ka.js\": \"IBtZ\",\n\t\"./kk\": \"bXm7\",\n\t\"./kk.js\": \"bXm7\",\n\t\"./km\": \"6B0Y\",\n\t\"./km.js\": \"6B0Y\",\n\t\"./kn\": \"PpIw\",\n\t\"./kn.js\": \"PpIw\",\n\t\"./ko\": \"Ivi+\",\n\t\"./ko.js\": \"Ivi+\",\n\t\"./ku\": \"JCF/\",\n\t\"./ku.js\": \"JCF/\",\n\t\"./ky\": \"lgnt\",\n\t\"./ky.js\": \"lgnt\",\n\t\"./lb\": \"RAwQ\",\n\t\"./lb.js\": \"RAwQ\",\n\t\"./lo\": \"sp3z\",\n\t\"./lo.js\": \"sp3z\",\n\t\"./lt\": \"JvlW\",\n\t\"./lt.js\": \"JvlW\",\n\t\"./lv\": \"uXwI\",\n\t\"./lv.js\": \"uXwI\",\n\t\"./me\": \"KTz0\",\n\t\"./me.js\": \"KTz0\",\n\t\"./mi\": \"aIsn\",\n\t\"./mi.js\": \"aIsn\",\n\t\"./mk\": \"aQkU\",\n\t\"./mk.js\": \"aQkU\",\n\t\"./ml\": \"AvvY\",\n\t\"./ml.js\": \"AvvY\",\n\t\"./mn\": \"lYtQ\",\n\t\"./mn.js\": \"lYtQ\",\n\t\"./mr\": \"Ob0Z\",\n\t\"./mr.js\": \"Ob0Z\",\n\t\"./ms\": \"6+QB\",\n\t\"./ms-my\": \"ZAMP\",\n\t\"./ms-my.js\": \"ZAMP\",\n\t\"./ms.js\": \"6+QB\",\n\t\"./mt\": \"G0Uy\",\n\t\"./mt.js\": \"G0Uy\",\n\t\"./my\": \"honF\",\n\t\"./my.js\": \"honF\",\n\t\"./nb\": \"bOMt\",\n\t\"./nb.js\": \"bOMt\",\n\t\"./ne\": \"OjkT\",\n\t\"./ne.js\": \"OjkT\",\n\t\"./nl\": \"+s0g\",\n\t\"./nl-be\": \"2ykv\",\n\t\"./nl-be.js\": \"2ykv\",\n\t\"./nl.js\": \"+s0g\",\n\t\"./nn\": \"uEye\",\n\t\"./nn.js\": \"uEye\",\n\t\"./oc-lnc\": \"Fnuy\",\n\t\"./oc-lnc.js\": \"Fnuy\",\n\t\"./pa-in\": \"8/+R\",\n\t\"./pa-in.js\": \"8/+R\",\n\t\"./pl\": \"jVdC\",\n\t\"./pl.js\": \"jVdC\",\n\t\"./pt\": \"8mBD\",\n\t\"./pt-br\": \"0tRk\",\n\t\"./pt-br.js\": \"0tRk\",\n\t\"./pt.js\": \"8mBD\",\n\t\"./ro\": \"lyxo\",\n\t\"./ro.js\": \"lyxo\",\n\t\"./ru\": \"lXzo\",\n\t\"./ru.js\": \"lXzo\",\n\t\"./sd\": \"Z4QM\",\n\t\"./sd.js\": \"Z4QM\",\n\t\"./se\": \"//9w\",\n\t\"./se.js\": \"//9w\",\n\t\"./si\": \"7aV9\",\n\t\"./si.js\": \"7aV9\",\n\t\"./sk\": \"e+ae\",\n\t\"./sk.js\": \"e+ae\",\n\t\"./sl\": \"gVVK\",\n\t\"./sl.js\": \"gVVK\",\n\t\"./sq\": \"yPMs\",\n\t\"./sq.js\": \"yPMs\",\n\t\"./sr\": \"zx6S\",\n\t\"./sr-cyrl\": \"E+lV\",\n\t\"./sr-cyrl.js\": \"E+lV\",\n\t\"./sr.js\": \"zx6S\",\n\t\"./ss\": \"Ur1D\",\n\t\"./ss.js\": \"Ur1D\",\n\t\"./sv\": \"X709\",\n\t\"./sv.js\": \"X709\",\n\t\"./sw\": \"dNwA\",\n\t\"./sw.js\": \"dNwA\",\n\t\"./ta\": \"PeUW\",\n\t\"./ta.js\": \"PeUW\",\n\t\"./te\": \"XLvN\",\n\t\"./te.js\": \"XLvN\",\n\t\"./tet\": \"V2x9\",\n\t\"./tet.js\": \"V2x9\",\n\t\"./tg\": \"Oxv6\",\n\t\"./tg.js\": \"Oxv6\",\n\t\"./th\": \"EOgW\",\n\t\"./th.js\": \"EOgW\",\n\t\"./tk\": \"Wv91\",\n\t\"./tk.js\": \"Wv91\",\n\t\"./tl-ph\": \"Dzi0\",\n\t\"./tl-ph.js\": \"Dzi0\",\n\t\"./tlh\": \"z3Vd\",\n\t\"./tlh.js\": \"z3Vd\",\n\t\"./tr\": \"DoHr\",\n\t\"./tr.js\": \"DoHr\",\n\t\"./tzl\": \"z1FC\",\n\t\"./tzl.js\": \"z1FC\",\n\t\"./tzm\": \"wQk9\",\n\t\"./tzm-latn\": \"tT3J\",\n\t\"./tzm-latn.js\": \"tT3J\",\n\t\"./tzm.js\": \"wQk9\",\n\t\"./ug-cn\": \"YRex\",\n\t\"./ug-cn.js\": \"YRex\",\n\t\"./uk\": \"raLr\",\n\t\"./uk.js\": \"raLr\",\n\t\"./ur\": \"UpQW\",\n\t\"./ur.js\": \"UpQW\",\n\t\"./uz\": \"Loxo\",\n\t\"./uz-latn\": \"AQ68\",\n\t\"./uz-latn.js\": \"AQ68\",\n\t\"./uz.js\": \"Loxo\",\n\t\"./vi\": \"KSF8\",\n\t\"./vi.js\": \"KSF8\",\n\t\"./x-pseudo\": \"/X5v\",\n\t\"./x-pseudo.js\": \"/X5v\",\n\t\"./yo\": \"fzPg\",\n\t\"./yo.js\": \"fzPg\",\n\t\"./zh-cn\": \"XDpg\",\n\t\"./zh-cn.js\": \"XDpg\",\n\t\"./zh-hk\": \"SatO\",\n\t\"./zh-hk.js\": \"SatO\",\n\t\"./zh-mo\": \"OmwH\",\n\t\"./zh-mo.js\": \"OmwH\",\n\t\"./zh-tw\": \"kOpN\",\n\t\"./zh-tw.js\": \"kOpN\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"RnhZ\";","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Poll } from '../models/poll';\r\nimport { UserService } from './user.service';\r\nimport { UtilService } from './util.service';\r\nimport { LoggedUser } from '../models/logged-user';\r\nimport { Router } from '@angular/router';\r\nimport { SocketService } from './socket.service';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class PollService {\r\n  constructor(\r\n    private http: HttpClient,\r\n    private userService: UserService,\r\n    private utilService: UtilService,\r\n    private router: Router,\r\n    private socketService: SocketService\r\n  ) { }\r\n\r\n  private _polls$: BehaviorSubject<Poll[]> = new BehaviorSubject([]);\r\n  public polls$: Observable<Poll[]> = this._polls$.asObservable();\r\n  private _totalPollsCount$: BehaviorSubject<number> = new BehaviorSubject(100);\r\n  public totalPollsCount$: Observable<number> =\r\n    this._totalPollsCount$.asObservable();\r\n\r\n  public query(pageNumber = 1, sortBy = 'newest'): void {\r\n    const query = { page: '' + pageNumber, sortBy };\r\n    this.http\r\n      .get<any>(`${environment.pollURL}`, { params: query })\r\n      .subscribe((res: { data: Poll[]; total: number }) => {\r\n        const polls = res.data.filter((poll) => !poll.isPrivate);\r\n        this._polls$.next(polls);\r\n        this._totalPollsCount$.next(res.total);\r\n      });\r\n  }\r\n\r\n  public getById(pollId: string): Observable<Poll> {\r\n    return this.http.get<Poll>(`${environment.pollURL}/${pollId}`).pipe(\r\n      catchError((errorRes) => {\r\n        this.router.navigateByUrl('/404');\r\n        return throwError(`Failed to get poll ${pollId}, ${errorRes}`);\r\n      })\r\n    );\r\n  }\r\n\r\n  public addVote(poll: Poll, selectedOptions: any[]): Observable<Poll> {\r\n    const guestData = this.userService.guestDataValue;\r\n    const loggedUser: LoggedUser = this.userService.loggedUserValue;\r\n    const userIp: string = guestData?.ip_address;\r\n\r\n    if (poll.voters[userIp] || poll.voters[loggedUser?._id]) {\r\n      return throwError((err: Error) => new Error('User already voted'));\r\n    }\r\n\r\n    selectedOptions.forEach((selectionId) => {\r\n      const optionToUpdateIdx = poll.options.findIndex(\r\n        (option) => option._id === selectionId\r\n      );\r\n      poll.options[optionToUpdateIdx].votes += 1;\r\n    });\r\n\r\n    poll.totalVotes += selectedOptions.length;\r\n    if (loggedUser) {\r\n      poll.voters[loggedUser._id] = loggedUser.country || 'Unknown Country';\r\n    } else if (userIp) {\r\n      poll.voters[userIp] = guestData.country;\r\n    } else {\r\n      return\r\n    }\r\n    this.socketService.emit('update poll', poll);\r\n    return this.update(poll._id, poll);\r\n  }\r\n\r\n  public submitPoll(poll: Poll): any {\r\n    if (poll._id) {\r\n      return this.update(poll._id, poll);\r\n    } else {\r\n      delete poll._id;\r\n      return this.create(poll);\r\n    }\r\n  }\r\n\r\n  public addComment(txt: string, poll: Poll): Observable<Poll> {\r\n    const commentToAdd = {\r\n      txt,\r\n      createdAt: Date.now(),\r\n      author: {},\r\n    };\r\n    let author: Partial<LoggedUser> = this.userService.loggedUserValue;\r\n    if (!author) {\r\n      let guestData = this.userService.guestDataValue;\r\n      author = {\r\n        _id: 'guest',\r\n        name: 'Guest',\r\n        country: guestData?.country || 'Unknown',\r\n        flag: guestData?.flag.svg,\r\n        logoColor:\r\n          this.userService.loggedUserValue?.logoColor ||\r\n          this.utilService.getRandomLightColor(),\r\n      };\r\n    }\r\n    commentToAdd.author = author;\r\n    poll.comments = [commentToAdd, ...poll.comments];\r\n    return this.update(poll._id, poll);\r\n  }\r\n\r\n  private create(poll: Poll) {\r\n    return this.http.post<Poll>(environment.pollURL, poll);\r\n  }\r\n\r\n  private update(pollId: string, poll: Poll) {\r\n    return this.http.put<Poll>(`${environment.pollURL}/${pollId}`, poll, {\r\n      withCredentials: true,\r\n    });\r\n  }\r\n\r\n  public remove(pollId: string) {\r\n    return this.http.delete(`${environment.pollURL}/${pollId}`, {\r\n      withCredentials: true,\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  Event,\r\n  NavigationCancel,\r\n  NavigationEnd,\r\n  NavigationError,\r\n  NavigationStart,\r\n  Router,\r\n} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'uvote';\r\n  loading: boolean = false;\r\n\r\n  constructor(private router: Router) {}\r\n\r\n  ngOnInit() {\r\n    this.router.events.subscribe((event: Event) => {\r\n      switch (true) {\r\n        case event instanceof NavigationStart: {\r\n          this.loading = true;\r\n          break;\r\n        }\r\n        case event instanceof NavigationEnd:\r\n        case event instanceof NavigationCancel:\r\n        case event instanceof NavigationError: {\r\n          this.loading = false;\r\n          break;\r\n        }\r\n        default: {\r\n          break;\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"app\">\r\n  <app-header></app-header>\r\n  <div *ngIf=\"loading\" class=\"loader\"></div>\r\n  <router-outlet *ngIf=\"!loading\"></router-outlet>\r\n</div>\r\n","import { Component, OnInit, OnDestroy, ViewEncapsulation } from '@angular/core';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Poll } from 'src/app/models/poll';\r\nimport { PollService } from 'src/app/services/poll.service';\r\n\r\n@Component({\r\n  selector: 'poll-app',\r\n  templateUrl: './poll-app.component.html',\r\n  styleUrls: ['./poll-app.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class PollAppComponent implements OnInit, OnDestroy {\r\n  constructor(\r\n    private pollService: PollService,\r\n    private titleService: Title,\r\n    private route: ActivatedRoute\r\n  ) {}\r\n  polls$: Observable<Poll[]>;\r\n  destroy$: Subject<boolean> = new Subject<boolean>();\r\n  pageNumber: number;\r\n  totalItems: number;\r\n  ngOnInit() {\r\n    this.route.queryParams\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe((params) => {\r\n        this.pageNumber = +params.page || 1;\r\n      });\r\n    this.pollService.query(this.pageNumber);\r\n    this.getPolls();\r\n    this.pollService.totalPollsCount$\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe((total) => (this.totalItems = total));\r\n    this.titleService.setTitle('Discover Polls | Uvote');\r\n  }\r\n\r\n  onPageChange({ ev, sortBy }) {\r\n    this.pageNumber = ev;\r\n    this.pollService.query(this.pageNumber, sortBy);\r\n  }\r\n\r\n  getPolls() {\r\n    this.polls$ = this.pollService.polls$;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy$.next(true);\r\n    this.destroy$.unsubscribe();\r\n  }\r\n}\r\n","<div class=\"poll-app\">\r\n  <poll-list\r\n    *ngIf=\"(polls$ | async).length\"\r\n    [polls]=\"polls$ | async\"\r\n    [totalItems]=\"totalItems\"\r\n    [currPage]=\"pageNumber\"\r\n    (onPageChange)=\"onPageChange($event)\"\r\n    listTitle=\"Discover Community Polls\"\r\n  ></poll-list>\r\n</div>\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport {\n  faFacebookF,\n  faTwitter,\n  faWhatsapp,\n} from '@fortawesome/free-brands-svg-icons';\nimport { faEnvelope } from '@fortawesome/free-solid-svg-icons';\nimport { MessageService } from 'primeng/api';\n\n@Component({\n  selector: 'share',\n  templateUrl: './share.component.html',\n  styleUrls: ['./share.component.scss'],\n  providers: [MessageService],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ShareComponent implements OnInit {\n  constructor(private messageService: MessageService) {}\n  link: string;\n  fbIcon = faFacebookF;\n  twitterIcon = faTwitter;\n  whatsAppIcon = faWhatsapp;\n  mailIcon = faEnvelope;\n\n  ngOnInit(): void {\n    const link = window.location.href;\n    const endIndex = link.indexOf('/results');\n    if (endIndex > 0) {\n      this.link = link.slice(0, endIndex);\n    } else this.link = link;\n  }\n\n  getShareLink(type: string): string {\n    const link = this.link\n    switch (type) {\n      case 'fb':\n        return `https://www.facebook.com/sharer/sharer.php?u=${link}`;\n      case 'twitter':\n        return `https://twitter.com/intent/tweet?url=${link}`;\n      case 'whatsapp':\n        return `https://api.whatsapp.com/send?text=Check this poll on Uvote!%20-%20${link}`;\n      case 'email':\n        return `mailto:?subject=Check this poll on Uvote!&body=${link}`;\n      default:\n        return link;\n    }\n  }\n\n  onLinkCopy() {\n    navigator.clipboard\n      .writeText(this.link)\n      .then(() => this.showSuccess())\n      .catch((e) => console.error(e));\n  }\n\n  showSuccess() {\n    this.messageService.add({\n      severity: 'success',\n      summary: 'Link copied',\n    });\n  }\n}\n","<section class=\"share flex column align-center\">\n  <p-toast\n    [breakpoints]=\"{ '460px': { width: '90%' } }\"\n    position=\"top-center\"\n    preventOpenDuplicates=\"true\"\n  ></p-toast>\n  <p class=\"heading\">Share this poll</p>\n\n  <div class=\"social-links flex\">\n    <a [href]=\"getShareLink('fb')\">\n      <fa-icon class=\"fb-icon\" [icon]=\"fbIcon\"></fa-icon>\n    </a>\n    <a [href]=\"getShareLink('twitter')\">\n      <fa-icon class=\"twitter-icon\" [icon]=\"twitterIcon\"></fa-icon>\n    </a>\n    <a [href]=\"getShareLink('whatsapp')\">\n      <fa-icon class=\"whatsapp-icon\" [icon]=\"whatsAppIcon\"></fa-icon>\n    </a>\n    <a [href]=\"getShareLink('email')\">\n      <fa-icon class=\"mail-icon\" [icon]=\"mailIcon\"></fa-icon>\n    </a>\n  </div>\n  <p (click)=\"onLinkCopy()\" class=\"copy-btn regular-btn flex align-center\">\n    <i class=\"pi pi-link\"></i>\n    <span>Copy Link</span>\n  </p>\n</section>\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Poll } from 'src/app/models/poll';\n\n@Component({\n  selector: 'voted-modal',\n  templateUrl: './voted-modal.component.html',\n  styleUrls: ['./voted-modal.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class VotedModalComponent implements OnInit {\n  constructor() {}\n  @Input() poll: Poll;\n  @Input() isVoteModalOpen: boolean;\n  @Output() onModalClose = new EventEmitter<boolean>();\n  ngOnInit(): void {}\n\n  onModalClick(ev: HTMLFormElement) {\n    ev.stopPropagation();\n  }\n\n  get resultsLink() {\n    return `/poll/${this.poll._id}/results`;\n  }\n\n  onCloseModal() {\n    this.onModalClose.emit(false)\n  }\n}\n","<div\n  (click)=\"onModalClick($event)\"\n  class=\"voted-modal flex column align-center justify-center\"\n  [ngClass]=\"isVoteModalOpen ? '' : 'hide'\"\n>\n  <h3>Thanks for voting!</h3>\n  <img src=\"../../../assets/imgs/checked.svg\" alt=\"\" />\n  <div class=\"actions flex\">\n    <div class=\"buttons flex\">\n      <button (click)=\"onCloseModal()\" class=\"regular-btn\">Back to poll</button>\n    </div>\n    <div class=\"btn-container flex\">\n      <a class=\"results-btn\" [routerLink]=\"resultsLink\">\n        <i class=\"pi pi-chart-bar\"></i>\n        Poll results\n      </a>\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { Poll } from 'src/app/models/poll';\r\nimport { PollService } from '../poll.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class PollResolverService {\r\n  constructor(private pollService: PollService, private router: Router) {}\r\n  resolve(route: ActivatedRouteSnapshot): Observable<Poll> {\r\n    const { id } = route.params;\r\n    if (!id) {\r\n      this.router.navigateByUrl('/404');\r\n      return null;\r\n    }\r\n    return this.pollService.getById(id);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { RadioButtonModule } from 'primeng/radiobutton';\r\nimport { InputSwitchModule } from 'primeng/inputswitch';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { CheckboxModule } from 'primeng/checkbox';\r\nimport { CalendarModule } from 'primeng/calendar';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { ToastModule } from 'primeng/toast';\r\nimport { ChartModule } from 'primeng/chart';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { CommonModule } from '@angular/common';\r\nimport {\r\n  SocialLoginModule,\r\n  SocialAuthServiceConfig,\r\n  GoogleLoginProvider,\r\n} from 'angularx-social-login';\r\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\r\nimport { DialogModule } from 'primeng/dialog';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { HomepageComponent } from './pages/homepage/homepage.component';\r\nimport { PollAppComponent } from './pages/poll-app/poll-app.component';\r\nimport { PollDetailsComponent } from './pages/poll-details/poll-details.component';\r\nimport { PollPreviewComponent } from './cmps/poll-preview/poll-preview.component';\r\nimport { AppHeaderComponent } from './cmps/app-header/app-header.component';\r\nimport { PollEditComponent } from './pages/poll-edit/poll-edit.component';\r\nimport { PopoverComponent } from './cmps/popover/popover.component';\r\nimport { LoginComponent } from './pages/login/login.component';\r\nimport { SignupComponent } from './pages/signup/signup.component';\r\nimport { ErrorComponent } from './pages/error/error.component';\r\nimport { ConfirmModalComponent } from './cmps/confirm-modal/confirm-modal.component';\r\nimport { PollCommentsComponent } from './cmps/poll-comments/poll-comments.component';\r\nimport { PollResultsComponent } from './pages/poll-results/poll-results.component';\r\nimport { VotedModalComponent } from './cmps/voted-modal/voted-modal.component';\r\nimport { ShareComponent } from './cmps/share/share.component';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { UserProfileComponent } from './pages/user-profile/user-profile.component';\r\nimport { PollListComponent } from './cmps/poll-list/poll-list.component';\r\nimport { AddHeaderInterceptor } from './helpers/interceptors/add-header.interceptor';\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomepageComponent,\r\n    PollAppComponent,\r\n    PollDetailsComponent,\r\n    PollPreviewComponent,\r\n    AppHeaderComponent,\r\n    PollEditComponent,\r\n    PopoverComponent,\r\n    LoginComponent,\r\n    SignupComponent,\r\n    ErrorComponent,\r\n    ConfirmModalComponent,\r\n    PollCommentsComponent,\r\n    PollResultsComponent,\r\n    VotedModalComponent,\r\n    ShareComponent,\r\n    UserProfileComponent,\r\n    PollListComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    AppRoutingModule,\r\n    RadioButtonModule,\r\n    CalendarModule,\r\n    CheckboxModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    InputSwitchModule,\r\n    HttpClientModule,\r\n    CommonModule,\r\n    SocialLoginModule,\r\n    InputTextModule,\r\n    ConfirmDialogModule,\r\n    DialogModule,\r\n    NgxPaginationModule,\r\n    DropdownModule,\r\n    FontAwesomeModule,\r\n    ToastModule,\r\n    ChartModule,\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: 'SocialAuthServiceConfig',\r\n      useValue: {\r\n        autoLogin: false,\r\n        providers: [\r\n          {\r\n            id: GoogleLoginProvider.PROVIDER_ID,\r\n            provider: new GoogleLoginProvider(\r\n              '1055571878940-4ia31ot06g5svt6h6pvggfc8offps3cq.apps.googleusercontent.com'\r\n            ),\r\n          },\r\n        ],\r\n      } as SocialAuthServiceConfig,\r\n    },\r\n    { provide: HTTP_INTERCEPTORS, useClass: AddHeaderInterceptor, multi: true },\r\n  ],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'popover',\r\n  templateUrl: './popover.component.html',\r\n  styleUrls: ['./popover.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PopoverComponent implements OnInit {\r\n  constructor() {}\r\n  @Input() actionsTexts: any[];\r\n  @Input() actionsIcons: any[];\r\n  @Output() actionType = new EventEmitter<string>();\r\n\r\n  ngOnInit(): void {}\r\n\r\n  onActionClick(actionType: string) {\r\n    this.actionType.emit(actionType);\r\n  }\r\n}\r\n","<aside>\r\n  <h4\r\n    (click)=\"onActionClick(txt)\"\r\n    *ngFor=\"let txt of actionsTexts; let idx = index\"\r\n  >\r\n    <i class=\"{{ actionsIcons[idx] }}\"></i>\r\n    {{ txt }}\r\n  </h4>\r\n</aside>\r\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class AddHeaderInterceptor implements HttpInterceptor {\n  constructor() {}\n\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    const clonedRequest = req.clone({ setHeaders: { 'allowed': 'Uvote' } });\n    return next.handle(clonedRequest);\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Poll } from 'src/app/models/poll';\n\n@Component({\n  selector: 'poll-list',\n  templateUrl: './poll-list.component.html',\n  styleUrls: ['./poll-list.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PollListComponent implements OnInit {\n  constructor(private router: Router, private r: ActivatedRoute) {}\n  @Input() polls: Poll[];\n  @Input() listTitle: string;\n  @Input() paginatorSize: number = 5;\n  @Input() currPage: number = 1;\n  @Input() totalItems: number = 100;\n  @Output() onPageChange = new EventEmitter();\n  options = [{ name: 'Newest' }, { name: 'Popularity' }];\n  sortBy = { name: 'Newest' };\n  ngOnInit(): void {\n    this.r.queryParams.subscribe((params) => {\n      if(params.sort) {\n        this.sortBy.name = params?.sort?.charAt(0).toUpperCase() + params?.sort?.slice(1)\n      }\n    });\n    this.query(this.currPage)\n  }\n\n  query(ev: number = this.currPage) {\n    const sortBy = this.sortBy.name.toLowerCase();\n    const params: Params = { page: +ev, sort: sortBy };\n    this.router.navigate([], { relativeTo: this.r, queryParams: params });\n    this.onPageChange.emit({ ev, sortBy });\n  }\n\n  trackByFunc(i, poll) {\n    return poll._id || i;\n  }\n}\n","<div\n  *ngIf=\"polls.length\"\n  class=\"poll-list flex column justify-center align-center\"\n>\n  <div class=\"list-header flex column justify-center align-center\">\n    <h3>{{listTitle}}</h3>\n    <div class=\"sort-container\">\n      <p-dropdown\n        [options]=\"options\"\n        [(ngModel)]=\"sortBy\"\n        placeholder=\"Sort By\"\n        optionLabel=\"name\"\n        (onChange)=\"query()\"\n      ></p-dropdown>\n    </div>\n  </div>\n  <poll-preview\n    class=\"preview-container\"\n    [ngStyle]=\"{'width': '100%'}\"\n    *ngFor=\"\n      let poll of polls\n        | paginate\n          : {\n              itemsPerPage: paginatorSize,\n              currentPage: currPage,\n              totalItems: totalItems\n            };\n      let i = index\n      trackBy: trackByFunc\n    \"\n    [class.active]=\"i == currentIndex\"\n    [poll]=\"poll\"\n  ></poll-preview>\n  <div class=\"pagination\">\n    <pagination-controls\n      previousLabel=\"Prev\"\n      nextLabel=\"Next\"\n      responsive=\"true\"\n      (pageBoundsCorrection)=\"query($event)\"\n      (pageChange)=\"query($event)\"\n    >\n    </pagination-controls>\n  </div>\n</div>\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { UserService } from 'src/app/services/user.service';\nimport { cloneDeep } from 'lodash';\nimport { Router } from '@angular/router';\nimport {\n  SocialAuthService,\n  GoogleLoginProvider,\n} from 'angularx-social-login';\n\n\n@Component({\n  selector: 'signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SignupComponent implements OnInit {\n  constructor(\n    private fb: FormBuilder,\n    private userService: UserService,\n    private router: Router,\n    private socialAuthService: SocialAuthService\n  ) {}\n  signupForm: FormGroup;\n  submitted: boolean = false;\n  showPassword: boolean = false;\n\n  ngOnInit(): void {\n    if (this.userService.loggedUserValue) {\n      this.router.navigate(['/poll']);\n    }\n    this.userService.getGuestData();\n    this.signupForm = this.fb.group({\n      name: ['', [Validators.required]],\n      email: [\n        '',\n        {\n          validators: [Validators.required, Validators.email],\n          asyncValidators: this.userService.emailValidator(),\n          updateOn: 'blur',\n        },\n      ],\n      password: ['', Validators.required],\n    });\n\n    this.socialAuthService.authState.subscribe(googleUser => {\n      const userToSignup = {\n        name: googleUser.name,\n        email: googleUser.email,\n        password: googleUser.idToken\n      }\n      this.onSignup(userToSignup)\n    })\n  }\n\n  onTogglePassword(): void {\n    this.showPassword = !this.showPassword;\n  }\n\n  onSignup(socialUser = null) {\n    this.submitted = true;\n    if(socialUser) {\n      this.userService.socialRegister(socialUser)\n    } else {\n      if (!this.signupForm.valid) return;\n      const formToSubmit = cloneDeep(this.signupForm.value);\n      this.userService.registerUser(formToSubmit);\n    }\n      this.submitted = false;\n      this.router.navigateByUrl('poll');\n  }\n\n  onGoogleSignUp() {\n    this.socialAuthService.signIn(GoogleLoginProvider.PROVIDER_ID)\n  }\n}\n","<section class=\"signup-container flex column justify-center align-center\">\n  <form\n    [formGroup]=\"signupForm\"\n    (ngSubmit)=\"onSignup()\"\n    class=\"flex column justify-center\"\n  >\n    <div class=\"signup-rabbit\"></div>\n    <h3>Create a free account</h3>\n    <label for=\"name\">Your name</label>\n\n    <span\n      class=\"has-error\"\n      *ngIf=\"submitted && signupForm.get('name').hasError('required')\"\n      >Name is required</span\n    >\n    <span class=\"p-input-icon-left\">\n      <i class=\"pi pi-user user-icon\"></i>\n      <input\n        type=\"text\"\n        id=\"name\"\n        pInputText\n        placeholder=\"Johnny Bravo\"\n        autocomplete=\"off\"\n        formControlName=\"name\"\n      />\n    </span>\n    <label for=\"email\">Email Address</label>\n    <span\n      class=\"has-error\"\n      *ngIf=\"\n        (submitted && signupForm.get('email').hasError('required')) ||\n        (submitted && signupForm.get('email').invalid)\n      \"\n      >Valid email is required</span\n    >\n    <span\n      class=\"has-error\"\n      *ngIf=\"signupForm.get('email').hasError('emailExists')\"\n      >This email is already registered</span\n    >\n    <span class=\"p-input-icon-left\">\n      <i class=\"pi pi-envelope email-icon\"></i>\n      <input\n        id=\"email\"\n        type=\"email\"\n        pInputText\n        placeholder=\"example@uvote.com\"\n        autocomplete=\"off\"\n        formControlName=\"email\"\n      />\n    </span>\n    <label for=\"password\">Choose Password</label>\n    <span\n      class=\"has-error\"\n      *ngIf=\"submitted && signupForm.get('password').hasError('required')\"\n      >Password is required</span\n    >\n    <div class=\"password-container\">\n      <span class=\"p-input-icon-left\">\n        <i class=\"pi pi-lock password-icon\"></i>\n        <input\n          [type]=\"showPassword ? 'text' : 'password'\"\n          pInputText\n          placeholder=\"●●●●●\"\n          autocomplete=\"off\"\n          formControlName=\"password\"\n        />\n      </span>\n      <span (click)=\"onTogglePassword()\" class=\"toggle-password\">\n        <i\n          [title]=\"showPassword ? 'Hide Password' : 'Show Password'\"\n          [ngClass]=\"showPassword ? 'pi pi-eye-slash' : 'pi pi-eye'\"\n        ></i>\n      </span>\n    </div>\n    <button class=\"submit-btn\" type=\"submit\">Sign up</button>\n    <button (click)=\"onGoogleSignUp()\" class=\"google-btn\" type=\"button\">\n      Sign up with Google\n    </button>\n    <p class=\"login-p\">\n      Already have an account? <a routerLink=\"/login\">Log In</a>\n    </p>\n  </form>\n</section>\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { faPencilAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faUsers } from '@fortawesome/free-solid-svg-icons';\r\nimport { faPoll } from '@fortawesome/free-solid-svg-icons';\r\nimport { faArrowRight } from '@fortawesome/free-solid-svg-icons';\r\n\r\n@Component({\r\n  selector: 'homepage',\r\n  templateUrl: './homepage.component.html',\r\n  styleUrls: ['./homepage.component.scss'],\r\n})\r\nexport class HomepageComponent implements OnInit {\r\n  constructor(private router: Router) {}\r\n  pencilIcon = faPencilAlt;\r\n  usersIcon = faUsers;\r\n  pollIcon = faPoll;\r\n  arrowIcon = faArrowRight;\r\n  ngOnInit(): void {}\r\n}\r\n","<section class=\"homepage-heading flex column align-center\">\r\n  <div class=\"fold flex\">\r\n    <div class=\"text flex column align-center\">\r\n      <h1>Got a <span>question</span>?</h1>\r\n      <h1>Create a <span>poll</span>.</h1>\r\n      <p>\r\n        Easily create an online poll\r\n        <br />\r\n        and share it across any device to collect feedback.\r\n      </p>\r\n      <a class=\"cta-btn\" href=\"#/create\" routerLink=\"/create\">Start Now </a>\r\n    </div>\r\n    <div class=\"vector flex justify-center align-center\">\r\n      <img src=\"../../../assets/imgs/homepage.svg\" alt=\"\" />\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"curve\">\r\n    <svg\r\n      class=\"shape\"\r\n      data-name=\"Layer 1\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 1200 120\"\r\n      preserveAspectRatio=\"none\"\r\n    >\r\n      <path\r\n        d=\"M600,112.77C268.63,112.77,0,65.52,0,7.23V120H1200V7.23C1200,65.52,931.37,112.77,600,112.77Z\"\r\n        class=\"shape-fill\"\r\n      ></path>\r\n    </svg>\r\n  </div>\r\n</section>\r\n<section class=\"intro\">\r\n  <div class=\"container flex column align-center\">\r\n    <h3 class=\"heading\">How does it work?</h3>\r\n    <div class=\"cards flex\">\r\n      <div class=\"card card-1\">\r\n        <fa-icon class=\"pencil-icon\" [icon]=\"pencilIcon\"></fa-icon>\r\n        <h4 class=\"card-heading\">Create</h4>\r\n\r\n        <p>Type your question and add answers. No signup is required</p>\r\n      </div>\r\n      <fa-icon class=\"arrow-icon\" [icon]=\"arrowIcon\"></fa-icon>\r\n\r\n      <div class=\"card card-2\">\r\n        <fa-icon class=\"users-icon\" [icon]=\"usersIcon\"></fa-icon>\r\n        <h4 class=\"card-heading\">Share</h4>\r\n\r\n        <p>Share your poll via social media or by link</p>\r\n      </div>\r\n      <fa-icon class=\"arrow-icon\" [icon]=\"arrowIcon\"></fa-icon>\r\n\r\n      <div class=\"card card-3\">\r\n        <fa-icon class=\"poll-icon\" [icon]=\"pollIcon\"></fa-icon>\r\n        <h4 class=\"card-heading\">Collect</h4>\r\n\r\n        <p>Collect results and see votes in real-time</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n<section class=\"features\">\r\n  <div class=\"container flex column align-center\">\r\n    <h3 class=\"heading\">Uvote Features</h3>\r\n    <div class=\"cards flex align-center justify-center\">\r\n      <div class=\"feature-card card-1\">\r\n        <img src=\"../../../assets/imgs/accuracy.png\" alt=\"\" />\r\n        <h4 class=\"card-heading\">IP Duplication Check</h4>\r\n        <p>A secure method to ensure vote accuracy.</p>\r\n      </div>\r\n      <div class=\"feature-card card-2\">\r\n        <img src=\"../../../assets/imgs/calendar.png\" alt=\"\" />\r\n        <h4 class=\"card-heading\">Deadline</h4>\r\n        <p>Set a deadline for your poll or let it run forever</p>\r\n      </div>\r\n      <div class=\"feature-card card-3\">\r\n        <img src=\"../../../assets/imgs/private.png\" alt=\"\" />\r\n        <h4 class=\"card-heading\">Private Polls</h4>\r\n        <p>Decide if you want your poll to be public or private</p>\r\n      </div>\r\n      <div class=\"feature-card card-4\">\r\n        <img src=\"../../../assets/imgs/chat.png\" alt=\"\" />\r\n        <h4 class=\"card-heading\">Comments</h4>\r\n        <p>People can comment their thoughts on polls</p>\r\n      </div>\r\n    </div>\r\n    <a class=\"regular-btn browse-btn\" href=\"#/poll?page=1&sort=newest\"\r\n      >Browse Public Polls</a\r\n    >\r\n  </div>\r\n</section>\r\n<footer class=\"flex align-center justify-center\">\r\n  <a href=\"https://www.linkedin.com/in/yehonathan-segev/\"\r\n    >® 2021 Uvote | Yehonathan Segev</a\r\n  >\r\n</footer>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport {\r\n  AbstractControl,\r\n  AsyncValidatorFn,\r\n  ValidationErrors,\r\n} from '@angular/forms';\r\nimport {\r\n  BehaviorSubject,\r\n  Observable,\r\n  of,\r\n  Subscription,\r\n  throwError,\r\n} from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { LoggedUser } from '../models/logged-user';\r\nimport { User } from '../models/user';\r\nimport { UtilService } from './util.service';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UserService {\r\n  constructor(private http: HttpClient, private utilService: UtilService) {}\r\n  private _guestData$: BehaviorSubject<any> = new BehaviorSubject(null);\r\n  public guestData$: Observable<any> = this._guestData$.asObservable();\r\n  private _loggedInUser$: BehaviorSubject<any> = new BehaviorSubject(\r\n    this.utilService.loadFromStorage('user')\r\n  );\r\n  public loggedInUser$: Observable<any> = this._loggedInUser$.asObservable();\r\n\r\n  public getGuestData() {\r\n    const cachedUserInfo = this.utilService.loadFromStorage('user-info');\r\n    if (cachedUserInfo) {\r\n      this._guestData$.next(cachedUserInfo);\r\n      return;\r\n    }\r\n    this.http\r\n      .get(\r\n        `https://ipgeolocation.abstractapi.com/v1/?api_key=${environment.apiKey}`,\r\n        {\r\n          headers: null,\r\n        }\r\n      )\r\n      .subscribe((guestData: any) => {\r\n        this.utilService.saveToStorage('user-info', guestData);\r\n        this._guestData$.next(guestData);\r\n      });\r\n  }\r\n\r\n  public get loggedUserValue(): LoggedUser {\r\n    return this._loggedInUser$.value;\r\n  }\r\n\r\n  public get guestDataValue() {\r\n    return this._guestData$.value;\r\n  }\r\n\r\n  public login(credentials: {\r\n    name: string;\r\n    email: string;\r\n    password: string | number;\r\n  }): Observable<LoggedUser> {\r\n    return this.http\r\n      .post<LoggedUser>(`${environment.authURL}/login`, credentials, {\r\n        withCredentials: true,\r\n      })\r\n      .pipe(catchError((err) => throwError(err)));\r\n  }\r\n\r\n  public getById(\r\n    userId: string,\r\n    pageNumber = 1,\r\n    sortBy = 'newest'\r\n  ): Observable<User> {\r\n    const query = { page: '' + pageNumber, sortBy };\r\n    return this.http.get<User>(`${environment.userURL}/${userId}`, {\r\n      params: query,\r\n    });\r\n  }\r\n\r\n  public registerUser(userInfo: User): Subscription {\r\n    userInfo.name = userInfo.name.trim();\r\n    userInfo.email = userInfo.email.toLowerCase();\r\n    userInfo.logoColor = this.utilService.getRandomLightColor();\r\n    if (this._guestData$) {\r\n      const guestData = this.guestDataValue;\r\n      userInfo.country = guestData.country;\r\n      userInfo.flag = guestData.flag.svg;\r\n    }\r\n    return this.http\r\n      .post(`${environment.authURL}/signup`, userInfo, {\r\n        withCredentials: true,\r\n      })\r\n      .subscribe((loggedInUser) => {\r\n        this.utilService.saveToStorage('user', loggedInUser);\r\n        this._loggedInUser$.next(loggedInUser);\r\n      });\r\n  }\r\n\r\n  public socialRegister(socialUser: any): void {\r\n    this.checkifEmailExists(socialUser.email).subscribe(\r\n      (isRegistred) => {\r\n        this.login(socialUser).subscribe((loggedInUser) =>\r\n          this._loggedInUser$.next(loggedInUser)\r\n        );\r\n      },\r\n      (err) => {\r\n        if (err.status === 500) {\r\n          this.registerUser(socialUser);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  public logout(): void {\r\n    localStorage.removeItem('user');\r\n    this._loggedInUser$.next(null);\r\n    this.http\r\n      .post(`${environment.authURL}/logout`, {}, { withCredentials: true })\r\n      .subscribe();\r\n  }\r\n\r\n  public updateLoggedUser(user: LoggedUser): void {\r\n    this._loggedInUser$.next(user);\r\n    this.utilService.saveToStorage('user', user);\r\n  }\r\n\r\n  public checkifEmailExists(email: string): Observable<object> {\r\n    return this.http.get(`http://localhost:3030/api/user/email/${email}`);\r\n  }\r\n\r\n  public emailValidator(): AsyncValidatorFn {\r\n    return (control: AbstractControl): Observable<ValidationErrors | null> => {\r\n      return this.checkifEmailExists(control.value.toLowerCase()).pipe(\r\n        catchError((err) => of('')),\r\n        map((res) => {\r\n          return res ? { emailExists: true } : null;\r\n        })\r\n      );\r\n    };\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\r\nimport { Poll } from 'src/app/models/poll';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n  selector: 'poll-preview',\r\n  templateUrl: './poll-preview.component.html',\r\n  styleUrls: ['./poll-preview.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PollPreviewComponent implements OnInit {\r\n  @Input() poll: Poll;\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  getCreatedTime() {\r\n    return moment(this.poll.createdAt).fromNow();\r\n  }\r\n\r\n  pollVotesToShow() {\r\n    const pollVotes = this.poll.totalVotes;\r\n    if (!pollVotes) return 0;\r\n    else if (pollVotes > 1000) return '1k+';\r\n    else if (pollVotes > 99) return '99+';\r\n    else return pollVotes;\r\n  }\r\n\r\n  get pollLink() {\r\n    return `/poll/${this.poll._id}`\r\n  }\r\n}\r\n","\r\n<a\r\n  [routerLink]=\"pollLink\"\r\n  [href]=\"pollLink\"\r\n  *ngIf=\"!poll.isPrivate\"\r\n  class=\"poll-preview flex column\"\r\n>\r\n  <div class=\"votes\">\r\n    <span>{{pollVotesToShow() }} votes</span>\r\n  </div>\r\n  <h2>{{ poll.title }}</h2>\r\n  <p *ngIf=\"poll.description\">{{ poll.description }}</p>\r\n  <small>{{ getCreatedTime() }}</small>\r\n</a>\r\n","<header\r\n  class=\"app-header main-container flex align-center\"\r\n  [class.open]=\"isMenuOpen\"\r\n>\r\n  <div (click)=\"closeMenu()\" class=\"screen\"></div>\r\n  <div class=\"logo\">\r\n    <h1 routerLink=\"/\"><a href=\"#/\">Uvote</a></h1>\r\n  </div>\r\n  <div routerLink=\"/create\" class=\"create-btn\">\r\n    <a href=\"#/create\">Create Poll</a>\r\n  </div>\r\n  <button class=\"hamburger-menu\" (click)=\"toggleMenu()\">\r\n    <span class=\"line line-1\"></span>\r\n    <span class=\"line line-2\"></span>\r\n    <span class=\"line line-3\"></span>\r\n  </button>\r\n  <ul (click)=\"closeMenu()\" class=\"flex align-center\">\r\n    <li (click)=\"discoverNavigate()\">\r\n      <a href=\"#/poll?page=1&sort=newest\">Discover</a>\r\n    </li>\r\n    <li *ngIf=\"loggedInUser\" [routerLink]=\"['/u', loggedInUser._id]\">\r\n      <a [href]=\"profileLink\">Profile</a>\r\n    </li>\r\n    <li (click)=\"onLogout()\" *ngIf=\"loggedInUser\">Logout</li>\r\n    <li *ngIf=\"!loggedInUser\" routerLink=\"/login\">\r\n      <a href=\"#/login\">Login</a>\r\n    </li>\r\n    <li *ngIf=\"!loggedInUser\" routerLink=\"/signup\">\r\n      <a href=\"#/signup\">Sign up</a>\r\n    </li>\r\n  </ul>\r\n</header>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { SocialAuthService } from 'angularx-social-login';\r\nimport { Subscription } from 'rxjs';\r\nimport { User } from 'src/app/models/user';\r\nimport { UserService } from 'src/app/services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './app-header.component.html',\r\n  styleUrls: ['./app-header.component.scss'],\r\n})\r\nexport class AppHeaderComponent implements OnInit, OnDestroy {\r\n  loggedInUser: User;\r\n  userSub: Subscription;\r\n  isMenuOpen: boolean = false;\r\n  constructor(\r\n    private userService: UserService,\r\n    private socialAuthService: SocialAuthService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.userSub = this.userService.loggedInUser$.subscribe((user) => {\r\n      this.loggedInUser = user;\r\n    });\r\n  }\r\n  ngOnDestroy() {\r\n    this.userSub.unsubscribe();\r\n  }\r\n\r\n  onLogout(): void {\r\n    this.userService.logout();\r\n    this.socialAuthService.signOut();\r\n  }\r\n\r\n  discoverNavigate() {\r\n    this.router.navigateByUrl('/poll?page=1&sort=newest');\r\n  }\r\n\r\n  toggleMenu() {\r\n    this.isMenuOpen = !this.isMenuOpen\r\n  }\r\n\r\n  closeMenu() {\r\n    this.isMenuOpen = false\r\n  }\r\n\r\n  get profileLink(): string {\r\n    return `#/u/${this.loggedInUser._id}`;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ErrorComponent } from './pages/error/error.component';\r\nimport { HomepageComponent } from './pages/homepage/homepage.component';\r\nimport { LoginComponent } from './pages/login/login.component';\r\nimport { PollAppComponent } from './pages/poll-app/poll-app.component';\r\nimport { PollDetailsComponent } from './pages/poll-details/poll-details.component';\r\nimport { PollEditComponent } from './pages/poll-edit/poll-edit.component';\r\nimport { PollResultsComponent } from './pages/poll-results/poll-results.component';\r\nimport { SignupComponent } from './pages/signup/signup.component';\r\nimport { UserProfileComponent } from './pages/user-profile/user-profile.component';\r\nimport { PollResolverService } from './services/resolvers/poll-resolver.service';\r\nimport { UserResolver } from './services/resolvers/user.resolver';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'poll/:id/results',\r\n    component: PollResultsComponent,\r\n    resolve: { poll: PollResolverService },\r\n    runGuardsAndResolvers: 'paramsChange',\r\n    pathMatch: 'full',\r\n  },\r\n  {\r\n    path: 'poll/:id/edit',\r\n    component: PollEditComponent,\r\n    resolve: { poll: PollResolverService },\r\n    runGuardsAndResolvers: 'paramsChange',\r\n  },\r\n  {\r\n    path: 'poll/:id',\r\n    component: PollDetailsComponent,\r\n    resolve: { poll: PollResolverService },\r\n    runGuardsAndResolvers: 'paramsChange',\r\n  },\r\n  {\r\n    path: 'u/:id',\r\n    component: UserProfileComponent,\r\n    resolve: { user: UserResolver },\r\n    runGuardsAndResolvers: 'paramsChange',\r\n  },\r\n  {\r\n    path: 'poll',\r\n    component: PollAppComponent,\r\n  },\r\n  {\r\n    path: 'create',\r\n    component: PollEditComponent,\r\n  },\r\n  {\r\n    path: 'login',\r\n    component: LoginComponent,\r\n  },\r\n  {\r\n    path: 'signup',\r\n    component: SignupComponent,\r\n  },\r\n  {\r\n    path: '',\r\n    pathMatch: 'full',\r\n    component: HomepageComponent,\r\n  },\r\n  {\r\n    path: '**',\r\n    component: ErrorComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { useHash: true, scrollPositionRestoration: 'enabled' })],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component, HostListener, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Poll } from 'src/app/models/poll';\nimport { cloneDeep } from 'lodash';\nimport { SocketService } from 'src/app/services/socket.service';\n\n@Component({\n  selector: 'poll-results',\n  templateUrl: './poll-results.component.html',\n  styleUrls: ['./poll-results.component.scss'],\n})\nexport class PollResultsComponent implements OnInit {\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private socketService: SocketService\n  ) { }\n  poll: Poll;\n  countriesCount: number[];\n  countriesLabels: string[];\n  data: any;\n  countriesChartData: any;\n  options: any;\n  countriesOptions: any;\n  colors: string[];\n  scrWidth: number;\n\n  ngOnInit(): void {\n    this.route.data.subscribe((data) => {\n      if (!data.poll) this.router.navigateByUrl('/404');\n      this.poll = data.poll;\n      this.socketService.on('connection');\n      this.socketService.emit('join poll', data.poll._id);\n      this.socketService.on('poll updated').subscribe((updatedPoll: Poll) => {\n        this.poll = updatedPoll;\n        this.populateResultsChart();\n      });\n    });\n    this.getCountriesData();\n    this.populateColors();\n    this.populateResultsChart();\n    this.populateCountriesChart();\n  }\n\n  @HostListener('window:resize', ['$event'])\n  getScreenSize() {\n    this.scrWidth = window.innerWidth;\n  }\n\n  populateResultsChart() {\n    const dataToShow = this.voteCount;\n    this.data = {\n      labels: dataToShow ? this.optionsLabelNames : ['No data yet!'],\n      datasets: [\n        {\n          data: dataToShow || ['100'],\n          backgroundColor: this.colors,\n        },\n      ],\n    };\n\n    this.options = {\n      legend: {\n        display: false,\n      },\n      title: {\n        text: 'Votes',\n        display: true,\n      },\n      responsive: true,\n      maintainAspectRatio: true,\n    };\n  }\n\n  populateCountriesChart() {\n    const dataToShow = this.countriesCount;\n    this.countriesChartData = {\n      labels: dataToShow ? this.countriesLabels : ['No data yet!'],\n      datasets: [\n        {\n          data: dataToShow || ['Unknown'],\n          backgroundColor: this.colors,\n        },\n      ],\n    };\n\n    this.countriesOptions = {\n      legend: {\n        display: false,\n      },\n      title: {\n        text: 'Voters by country',\n        display: true,\n      },\n    };\n  }\n\n  getOptionPrecent(optionVotes: number) {\n    const precent = (optionVotes / this.poll.totalVotes) * 100;\n    if (!precent) return 0;\n    return parseFloat('' + precent).toFixed(2);\n  }\n\n  onUpdatePoll(updatedPoll: Poll) {\n    this.poll = updatedPoll;\n  }\n\n\n\n  getCountriesData() {\n    const voters = this.sortedPollByOptionsDescending.voters;\n    const countries = [];\n    for (const key in voters) {\n      countries.push(voters[key]);\n    }\n    const countriesCountMap = {};\n    countries.forEach((country) => {\n      countriesCountMap[country]\n        ? (countriesCountMap[country] += 1)\n        : (countriesCountMap[country] = 1);\n    });\n    const labels = [];\n    const count = [];\n    for (const country in countriesCountMap) {\n      labels.push(country);\n      count.push(countriesCountMap[country]);\n    }\n    this.countriesLabels = labels;\n    this.countriesCount = count;\n  }\n\n  get sortedPollByOptionsDescending(): Poll {\n    const pollCopy: Poll = cloneDeep(this.poll);\n    pollCopy.options.sort((a, b): any => {\n      return b.votes - a.votes;\n    });\n    return pollCopy;\n  }\n\n  get optionsLabelNames(): string[] {\n    const labelNames = this.sortedPollByOptionsDescending.options.map(\n      (option) => option.txt\n    );\n    return labelNames;\n  }\n\n  get voteCount(): number[] | boolean {\n    let voteCount = this.sortedPollByOptionsDescending.options.map((option) => {\n      return option.votes;\n    });\n    if (voteCount.every((item) => item === 0)) {\n      return false;\n    }\n    return voteCount;\n  }\n\n  get chartSize(): string {\n    if ('' + this.scrWidth > '1080') {\n      return '285px';\n    } else {\n      return '90vw';\n    }\n  }\n\n\n  populateColors() {\n    this.colors = [\n      '#FFCE56',\n      '#36A2EB',\n      '#aed987',\n      '#ef8250',\n      '#2196f3',\n      '#009688',\n      '#ff9800',\n      '#d45087',\n      '#2f4b7c',\n      '#63b179',\n      '#ffa600',\n      '#e4604e',\n      '#3f51b5',\n      '#665191',\n      '#03a9f4',\n      '#ffff9d',\n      '#ff5722',\n      '#00876c',\n      '#fee17e',\n      '#003f5c',\n      '#d43d51',\n      '#f7a258',\n      '#e91e63',\n      '#673ab7',\n      '#fcc267',\n      '#ff7c43',\n      '#f44336',\n      '#9c27b0',\n      '#00bcd4',\n      '#88c580',\n      '#795548',\n      '#f95d6a',\n      '#ffeb3b',\n      '#4caf50',\n      '#3d9c73',\n      '607d8b',\n      '#a05195',\n      '#d6ec91',\n    ];\n  }\n\n\n}\n","<section class=\"results flex column align-center\">\n  <div class=\"heading flex column align-center\">\n    <h2>{{ poll.title }}</h2>\n    <span class=\"votes-count\"\n      >{{ poll.totalVotes ? poll.totalVotes : 0 }} votes</span\n    >\n  </div>\n  <section class=\"graphical-info flex   justify-center\">\n    <div class=\"text-info flex column justify-center align-center\">\n      <div\n        class=\"container\"\n        *ngFor=\"\n          let option of sortedPollByOptionsDescending.options;\n          let i = index\n        \"\n      >\n        <div class=\"option-heading flex space-between\">\n          <span class=\"option-txt\">{{ option.txt }} </span>\n          <span class=\"option-percent\"\n            >{{ getOptionPrecent(option.votes) + \"%\"\n            }}{{ \" (\" + option.votes + \" votes)\" }}</span\n          >\n        </div>\n        <div class=\"progress-bar flex align-center\">\n          <span\n            [style.background-color]=\"colors[i]\"\n            [style.width]=\"getOptionPrecent(option.votes) + '%'\"\n            class=\"progress-percent\"\n          ></span>\n        </div>\n      </div>\n    </div>\n    <div class=\"charts flex\">\n\n      <div class=\"votes-chart\">\n        <p-chart\n        type=\"pie\"\n        [data]=\"data\"\n        [width]=\"chartSize\"\n        height=\"30vh\"\n        [options]=\"options\"\n        ></p-chart>\n      </div>\n      <div class=\"countries-chart\">\n        <p-chart type=\"doughnut\"\n        [data]=\"countriesChartData\"\n        [width]=\"chartSize\"\n        height=\"30vh\"\n        [options]=\"countriesOptions\"\n        \n        ></p-chart>\n      </div>\n  </div>\n  <div class=\"go-back\">\n  </div>\n</section>\n<button [routerLink]=\"['/poll/', poll._id]\" class=\"back-btn regular-btn\">Go back to poll</button>\n\n</section>\n<section class=\"info\">\n  <share></share>\n  <poll-comments\n    *ngIf=\"poll.isComments\"\n    [poll]=\"poll\"\n    (updatePoll)=\"onUpdatePoll($event)\"\n  ></poll-comments>\n</section>\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ErrorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<main class=\"error\">\n  <div class=\"astronaut\">\n    <div class=\"numbers\">\n      <span class=\"first-number\">4</span>\n      <span class=\"last-number\">4</span>\n    </div>\n  </div>\n  <div class=\"text flex column justify-center align-center\">\n    <h3>Oops! Looks like you are lost!</h3>\n    <button class=\"submit-btn\" routerLink=\"/poll\">Take me back</button>\n  </div>\n</main>\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic()\r\n  .bootstrapModule(AppModule)\r\n  .catch((err) => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}